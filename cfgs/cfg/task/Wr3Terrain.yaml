# used to create the object
name: Wr3Terrain

physics_engine: 'physx'

env:
  numEnvs: ${resolve_default:4096,${...num_envs}}
  numObservations: 45
  numActions: 12
  envSpacing: 3.  # [m]
  enableDebugVis: False
  useDefaultCommands: False

  terrain:
    terrainType: trimesh # none, plane, or trimesh
    staticFriction: 1.0  # [-]
    dynamicFriction: 1.0  # [-]
    restitution: 0.        # [-]
    # rough terrain only:
    curriculum: true
    maxInitMapLevel: 0
    mapLength: 8.
    mapWidth: 8.
    numLevels: 10
    numTerrains: 20
    # terrain types: [smooth slope, rough slope, stairs up, stairs down, discrete]
    terrainProportions: [0.1, 0.1, 0.35, 0.25, 0.2]
    # tri mesh only:
    slopeTreshold: 0.5

  terrainGenerator:
    terrainType: trimesh # none, plane, or trimesh
    staticFriction: 1.0  # [-]
    dynamicFriction: 1.0  # [-]
    restitution: 0.        # [-]
    # rough terrain only:
    curriculum: true
    maxInitMapLevel: 0
    mapLength: 8.
    mapWidth: 8.
    numLevels: 10
    numTerrains: 20
    # terrain types: [smooth slope, rough slope, stairs up, stairs down, discrete]
    # tri mesh only:
    slopeTreshold: 0.5

    borderSize: 30

    availableTerrains:
      [
         'randomUniformTerrain',
#        'discreteObstaclesTerrain',
        # 'waveTerrain',
        # 'minStepTerrain',
        # 'steppingStoneTerrain',
        'fractalNoiseTerrain',
      ]

    randomUniformTerrain:
      min_height: 0
      max_height: 0.01
      step: 0.025
      downsampled_scale: 0.2

    discreteObstaclesTerrain:
      max_height: 0.01
      min_size: 1
      max_size: 2
      num_rects: 40
      platform_size: 3.

    waveTerrain:
      num_waves: 10
      amplitude: 0.01

    minStepTerrain:
      height: 0.03

    steppingStoneTerrain:
      stone_size: 0.1
      stone_distance: 0.05
      max_height: 0.01
      platform_size: 0
      depth: 0

    fractalNoiseTerrain:
      widthSamples: 80
      lengthSamples: 80
      frequency: 5
      fractalOctaves: 2
      fractalLacunarity: 2.0
      fractalGain: 0.25
      zScale: 0.01


  baseInitState:
    pos: [0.0, 0.0, 0.40] # x,y,z [m]
    rot: [0.0, 0.0, 0.0, 1.0] # x,y,z,w [quat]
    vLinear: [0.0, 0.0, 0.0]  # x,y,z [m/s]
    vAngular: [0.0, 0.0, 0.0]  # x,y,z [rad/s]

  randomCommandVelocityRanges:
    # train
    linear_x: [-1., 1.] # min max [m/s]
    linear_y: [-1., 1.]   # min max [m/s]
    yaw: [-3.14, 3.14]    # min max [rad/s]

  control:
    # PD Drive parameters:
    stiffness: 10.0  # [N*m/rad]
    damping: 0.2     # [N*m*s/rad]
    # action scale: target angle = actionScale * action + defaultAngle
    actionScale: 4
    # decimation: Number of control action updates @ sim DT per policy DT
    decimation: 4

#    stiffness: 80.0  # [N*m/rad]
#    damping: 0.5     # [N*m*s/rad]
#    # action scale: target angle = actionScale * action + defaultAngle
#    actionScale: 0.5
#    # decimation: Number of control action updates @ sim DT per policy DT
#    decimation: 4

  defaultJointAngles: # = target angles when action = 0.0
    # the order should match the order in actions
    FL_hip_joint: 0.0
    FL_thigh_joint: 0.85
    FL_calf_joint: -1.8

    FR_hip_joint: 0.0
    FR_thigh_joint: 0.85
    FR_calf_joint: -1.8

    RL_hip_joint: 0.0
    RL_thigh_joint: 0.85
    RL_calf_joint: -1.8

    RR_hip_joint: 0.0
    RR_thigh_joint: 0.85
    RR_calf_joint: -1.8

#    FL_hip_joint: 0.0
#    FL_thigh_joint: 0.5
#    FL_calf_joint: -1.1
#
#    FR_hip_joint: 0.0
#    FR_thigh_joint: 0.5
#    FR_calf_joint: -1.1
#
#    RL_hip_joint: 0.0
#    RL_thigh_joint: 0.5
#    RL_calf_joint: -1.1
#
#    RR_hip_joint: 0.0
#    RR_thigh_joint: 0.5
#    RR_calf_joint: -1.1

  resetJointAngles:
    FL_hip_joint: 0.362
    FL_thigh_joint: 1.11
    FL_calf_joint: -2.71

    FR_hip_joint: 0.362
    FR_thigh_joint: 1.11
    FR_calf_joint: -2.71

    RL_hip_joint: 0.362
    RL_thigh_joint: 1.11
    RL_calf_joint: -2.71

    RR_hip_joint: 0.362
    RR_thigh_joint: 1.11
    RR_calf_joint: -2.71

  urdfAsset:
    file: "wr3/wr3_sphere_feet.xml"
#    file: "wr3/wr3_no_toe_nocol.xml"
    footName: calf #
    kneeName: thigh
    collapseFixedJoints: True
    fixBaseLink: false
    defaultDofDriveMode: 4 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)

  learn:
    expectedHeight: 0.35

    allowKneeContacts: true
    # rewards
    terminalReward: 0.0
    linearVelocityXYRewardScale: 1.0
    linearVelocityZRewardScale: -4.0
    angularVelocityXYRewardScale: -0.05
    angularVelocityZRewardScale: 0.5
    orientationRewardScale: -1. #-1.
    torqueRewardScale: -0.00002 # -0.000025
    jointAccRewardScale: -0.0005 # -0.0025
    heightRewardScale: -0.1 #5
    feetAirTimeRewardScale:  1.0
    kneeCollisionRewardScale: -0.25
    feetStumbleRewardScale: -0. #-2.0
    actionRateRewardScale: -0.01

    # cosmetics
    hipRewardScale: -0. #25

    # pose constraints
    poseRewardScale: -0.2

    # TODO: may be need to be turned
    # normalization
    linearVelocityScale: 2.0
    angularVelocityScale: 0.25
    dofPositionScale: 1.0
    dofVelocityScale: 0.05
    heightMeasurementScale: 5.0

    # noise
    addNoise: true
    noiseLevel: 1.0 # scales other values
    dofPositionNoise: 0.01
    dofVelocityNoise: 1.5
    linearVelocityNoise: 0.1
    angularVelocityNoise: 0.2
    gravityNoise: 0.05
    heightMeasurementNoise: 0.06

    #randomization
    randomizeFriction: true
    frictionRange: [0.5, 1.25]
    pushRobots: true
    pushInterval_s: 15

    # episode length in seconds
    episodeLength_s: 20

    #    # pose constraints
    #    expectedBaseHeight: 0.35

  # viewer cam:
  viewer:
    refEnv: 0
    pos: [0, 0, 10]  # [m]
    lookat: [1., 1, 9]  # [m]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

sim:
  dt: 0.005
  substeps: 1
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 100.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
  randomization_params:
    # specify which attributes to randomize for each actor type and property
    frequency: 300   # Define how many environment steps between generating new randomizations
    observations:
      range: [0., 0.002] # range for the white noise
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., 0.002]
      operation: "additive"
      distribution: "gaussian"
    sim_params:
     gravity:
       range: [0.95, 1.05]
       operation: "scaling"
       distribution: "uniform"
       schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
       schedule_steps: 1000
    actor_params:
      wr3:
        color: True
#         rigid_body_properties:
#           mass:
#             range: [0.75, 1.50]
#             operation: "scaling"
#             distribution: "uniform"
#             setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
#             schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
#             schedule_steps: 1000
        rigid_shape_properties:
          friction:
            num_buckets: 500
            range: [-0.5, 2.0]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 1000
          # restitution:
          #   # 恢复系数。它是刚体碰撞后最终速度与初始速度的比值。范围 [0,1]
          #   range: [0., 0.01]
          #   operation: "scaling"
          #   distribution: "uniform"
          #   schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
          #   schedule_steps: 1000
    control:
      randomize: True
      random_range: [0.5, 1.5]
    mass:
      randomize: True
      mass_random_range: [-1, 1]
      com_offset_range: [-0.1, 0.1] # center of mass offset


